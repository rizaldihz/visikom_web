import * as tf from '@tensorflow/tfjs';
import 'bootstrap/dist/css/bootstrap.css';
document.getElementById('output').innerText = "Hello World";

async function init(){

    //model =  await tf.loadModel('indexeddb://my-model-1');
    const model = await tf.loadLayersModel('tfjs_model/model.json');
    //model =  await tf.loadModel('tfjsversion/model.json');
    console.log('model loaded from storage');
}

init();

// const example = tf.fromPixels(webcamElement);  // for example
// const prediction = model.predict(example);

function preprocess(img)
{

    //convert the image data to a tensor 
    let tensor = tf.fromPixels(img)
    //resize to 50 X 50
    const resized = tf.image.resizeBilinear(tensor, [50, 50]).toFloat()
    // Normalize the image 
    const offset = tf.scalar(255.0);
    const normalized = tf.scalar(1.0).sub(resized.div(offset));
    //We add a dimension to get a batch shape 
    const batched = normalized.expandDims(0)
    return batched

}

// const pred = model.predict(preprocess(img)).dataSync()